unbind C-b
set -g prefix C-Space
bind Space send-prefix

set-window-option -g mode-keys vi

set-option -g default-terminal "screen-256color"

# move pain in vim-like style
bind C-o select-pane -t :.+
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
# bind-key -n 'H' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
# bind-key -n 'J' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
# bind-key -n 'K' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
# bind-key -n 'L' if-shell "is_vim" 'send-keys C-l'  'select-pane -R'
# tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
# if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
# if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

# bind-key -T copy-mode-vi 'C-h' select-pane -L
# bind-key -T copy-mode-vi 'C-j' select-pane -D
# bind-key -T copy-mode-vi 'C-k' select-pane -U
# bind-key -T copy-mode-vi 'C-l' select-pane -R
# bind-key -T copy-mode-vi 'C-\' select-pane -l

bind r source-file ~/.tmux.conf \; display "Reloaded!"

source-file ~/.tmux/tomorrow_tmuxline.conf # for tmux status line "tomorrow" theme
# source-file ~/.tmux/dark_tmuxline.conf # for tmux status line "tomorrow" theme

# set -g pane-border-status top
# set -g pane-active-border-style fg=brightred,bg=default
# set -g pane-border-style fg=brightred,bg=default 

# アクティブなペインの分割ラインの色
set -g pane-active-border-style fg=blue
# 非アクティブなペインの分割ラインの色を赤に設定
set -g pane-border-style fg=white



